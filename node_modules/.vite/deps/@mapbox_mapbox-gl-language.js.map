{
  "version": 3,
  "sources": ["../../.pnpm/@mapbox+mapbox-gl-language@1.0.1_mapbox-gl@2.15.0/node_modules/@mapbox/mapbox-gl-language/index.js"],
  "sourcesContent": ["/**\n * Create a new [Mapbox GL JS plugin](https://www.mapbox.com/blog/build-mapbox-gl-js-plugins/) that\n * modifies the layers of the map style to use the `text-field` that matches the browser language.\n * As of Mapbox GL Language v1.0.0, this plugin no longer supports token values (e.g. `{name}`). v1.0+ expects the `text-field`\n * property of a style to use an [expression](https://docs.mapbox.com/mapbox-gl-js/style-spec/expressions/) of the form `['get', 'name_en']` or `['get', 'name']`; these expressions can be nested. Note that `get` expressions used as inputs to other expressions may not be handled by this plugin. For example:\n * ```\n * [\"match\",\n *   [\"get\", \"name\"],\n *   \"California\",\n *   \"Golden State\",\n *   [\"coalesce\",\n *     [\"get\", \"name_en\"],\n *     [\"get\", \"name\"]\n *   ]\n * ]\n * ```\n * Only styles based on [Mapbox v8 styles](https://docs.mapbox.com/help/troubleshooting/streets-v8-migration-guide/) are supported.\n *\n * @constructor\n * @param {object} options - Options to configure the plugin.\n * @param {string[]} [options.supportedLanguages] - List of supported languages\n * @param {Function} [options.languageTransform] - Custom style transformation to apply\n * @param {RegExp} [options.languageField=/^name_/] - RegExp to match if a text-field is a language field\n * @param {Function} [options.getLanguageField] - Given a language choose the field in the vector tiles\n * @param {string} [options.languageSource] - Name of the source that contains the different languages.\n * @param {string} [options.defaultLanguage] - Name of the default language to initialize style after loading.\n * @param {string[]} [options.excludedLayerIds] - Name of the layers that should be excluded from translation.\n */\nfunction MapboxLanguage(options) {\n  options = Object.assign({}, options);\n  if (!(this instanceof MapboxLanguage)) {\n    throw new Error('MapboxLanguage needs to be called with the new keyword');\n  }\n\n  this.setLanguage = this.setLanguage.bind(this);\n  this._initialStyleUpdate = this._initialStyleUpdate.bind(this);\n\n  this._defaultLanguage = options.defaultLanguage;\n  this._isLanguageField = options.languageField || /^name_/;\n  this._getLanguageField = options.getLanguageField || function nameField(language) {\n    return language === 'mul' ? 'name' : `name_${language}`;\n  };\n  this._languageSource = options.languageSource || null;\n  this._languageTransform = options.languageTransform;\n  this._excludedLayerIds = options.excludedLayerIds || [];\n  this.supportedLanguages = options.supportedLanguages || ['ar', 'de', 'en', 'es', 'fr', 'it', 'ja', 'ko', 'mul', 'pt', 'ru', 'vi', 'zh-Hans', 'zh-Hant'];\n}\n\nconst isTokenField = /^\\{name/;\nfunction isFlatExpressionField(isLangField, property) {\n  const isGetExpression = Array.isArray(property) && property[0] === 'get';\n  if (isGetExpression && isTokenField.test(property[1])) {\n    console.warn('This plugin no longer supports the use of token syntax (e.g. {name}). Please use a get expression. See https://docs.mapbox.com/mapbox-gl-js/style-spec/expressions/ for more details.');\n  }\n\n  return isGetExpression && isLangField.test(property[1]);\n}\n\nfunction adaptNestedExpressionField(isLangField, property, languageFieldName) {\n  if (Array.isArray(property)) {\n    for (let i = 1; i < property.length; i++) {\n      if (Array.isArray(property[i])) {\n        if (isFlatExpressionField(isLangField, property[i])) {\n          property[i][1] = languageFieldName;\n        }\n        adaptNestedExpressionField(isLangField, property[i], languageFieldName);\n      }\n    }\n  }\n}\n\nfunction adaptPropertyLanguage(isLangField, property, languageFieldName) {\n  if (isFlatExpressionField(isLangField, property)) {\n    property[1] = languageFieldName;\n  }\n\n  adaptNestedExpressionField(isLangField, property, languageFieldName);\n\n  // handle special case of bare ['get', 'name'] expression by wrapping it in a coalesce statement\n  if (property[0] === 'get' && property[1] === 'name') {\n    const defaultProp = property.slice();\n    const adaptedProp = ['get', languageFieldName];\n    property = ['coalesce', adaptedProp, defaultProp];\n  }\n\n  return property;\n}\n\nfunction changeLayerTextProperty(isLangField, layer, languageFieldName, excludedLayerIds) {\n  if (layer.layout && layer.layout['text-field'] && excludedLayerIds.indexOf(layer.id) === -1) {\n    return Object.assign({}, layer, {\n      layout: Object.assign({}, layer.layout, {\n        'text-field': adaptPropertyLanguage(isLangField, layer.layout['text-field'], languageFieldName)\n      })\n    });\n  }\n  return layer;\n}\n\nfunction findStreetsSource(style) {\n  const sources = Object.keys(style.sources).filter((sourceName) => {\n    const url = style.sources[sourceName].url;\n    // the source URL can reference the source version or the style version\n    // this check and the error forces users to migrate to styles using source version 8\n    return url && url.indexOf('mapbox.mapbox-streets-v8') > -1 || /mapbox-streets-v[1-9][1-9]/.test(url);\n  });\n  if (!sources.length) throw new Error('If using MapboxLanguage with a Mapbox style, the style must be based on vector tile version 8, e.g. \"streets-v11\"');\n  return sources[0];\n}\n\n/**\n * Explicitly change the language for a style.\n * @param {object} style - Mapbox GL style to modify\n * @param {string} language - The language iso code\n * @returns {object} the modified style\n */\nMapboxLanguage.prototype.setLanguage = function (style, language) {\n  if (this.supportedLanguages.indexOf(language) < 0) throw new Error(`Language ${  language  } is not supported`);\n  const streetsSource = this._languageSource || findStreetsSource(style);\n  if (!streetsSource) return style;\n\n  const field = this._getLanguageField(language);\n  const isLangField = this._isLanguageField;\n  const excludedLayerIds = this._excludedLayerIds;\n  const changedLayers = style.layers.map((layer) => {\n    if (layer.source === streetsSource) return changeLayerTextProperty(isLangField, layer, field, excludedLayerIds);\n    return layer;\n  });\n\n  const languageStyle = Object.assign({}, style, {\n    layers: changedLayers\n  });\n\n  return this._languageTransform ? this._languageTransform(languageStyle, language) : languageStyle;\n};\n\nMapboxLanguage.prototype._initialStyleUpdate = function () {\n  const style = this._map.getStyle();\n  const language = this._defaultLanguage || browserLanguage(this.supportedLanguages);\n\n  this._map.setStyle(this.setLanguage(style, language));\n};\n\nfunction browserLanguage(supportedLanguages) {\n  const language = navigator.languages ? navigator.languages[0] : (navigator.language || navigator.userLanguage);\n  const parts = language && language.split('-');\n  let languageCode = language;\n  if (parts.length > 1) {\n    languageCode = parts[0];\n  }\n  if (supportedLanguages.indexOf(languageCode) > -1) {\n    return languageCode;\n  }\n  return null;\n}\n\nMapboxLanguage.prototype.onAdd = function (map) {\n  this._map = map;\n  this._map.on('style.load', this._initialStyleUpdate);\n  this._container = document.createElement('div');\n  return this._container;\n};\n\nMapboxLanguage.prototype.onRemove = function () {\n  this._map.off('style.load', this._initialStyleUpdate);\n  this._map = undefined;\n};\n\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = MapboxLanguage;\n} else {\n  window.MapboxLanguage = MapboxLanguage;\n}\n"],
  "mappings": "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",
  "names": []
}
